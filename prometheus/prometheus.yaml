apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  namespace: devops-tools
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s  # Scrape metrics every 10 seconds
      evaluation_interval: 15s  # Evaluate rules every 15 seconds
    scrape_configs:
      - job_name: 'prometheus'  # Scrape Prometheus itself
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'jenkins'  # Scrape Jenkins metrics
        metrics_path: '/prometheus'  # Jenkins metrics endpoint
        static_configs:
          - targets: ['jenkins-service.devops-tools.svc.cluster.local:8080']  # Use Kubernetes service DNS

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: devops-tools
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest  # Use the latest stable version
          ports:
            - containerPort: 9090
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
          livenessProbe:  # Ensure the container is healthy
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:  # Ensure the container is ready to serve traffic
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-server-conf
            defaultMode: 420  # Read-only permissions for the ConfigMap

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: devops-tools
  labels:
    app: prometheus-server
spec:
  selector:
    app: prometheus-server
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: NodePort  # Expose the service externally via NodePort