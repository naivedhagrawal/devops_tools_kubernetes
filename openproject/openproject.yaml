# kubectl create secret generic openproject-secret --from-literal=SECRET_KEY_BASE=$(openssl rand -hex 32) -n devops-tools
# kubectl create secret generic openproject-db-secret --from-literal=password='your_db_password' -n devops-tools

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openproject
  namespace: devops-tools
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: openproject
  template:
    metadata:
      labels:
        app: openproject
    spec:
      containers:
        - name: openproject
          image: openproject/openproject:15
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: pgdata
              mountPath: /var/openproject/pgdata
            - name: assets
              mountPath: /var/openproject/assets
          env:
            - name: OPENPROJECT_HTTPS
              value: "false"
            - name: OPENPROJECT_SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: openproject-secret
                  key: SECRET_KEY_BASE
            - name: OPENPROJECT_DB_USERNAME
              value: "openproject"
            - name: OPENPROJECT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: openproject-db-secret
                  key: password
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
        - name: assets
          persistentVolumeClaim:
            claimName: assets
---
apiVersion: v1
kind: Service
metadata:
  name: openproject-service
  namespace: devops-tools
spec:
  type: NodePort
  selector:
    app: openproject
  ports:
    - protocol: TCP
      nodePort: 31007
      port: 9000
      targetPort: 9000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata
  namespace: devops-tools
spec:
  accessModes: ["ReadWriteMany"]
  storageClassName: local-path
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: assets
  namespace: devops-tools
spec:
  accessModes: ["ReadWriteMany"]
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: openproject-pgdata
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  hostPath:
    path: /home/data/gitlab/open-project/pgdata
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: openproject-assets
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  hostPath:
    path: /home/data/gitlab/open-project/assets