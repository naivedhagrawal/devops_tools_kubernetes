# kubectl create secret generic gitlab-runner-secret --namespace=devops-tools --from-literal=runner-registration-token=<NEW_TOKEN>

---
# ServiceAccount for GitLab Runner
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner
  namespace: devops-tools

---
# ClusterRole for GitLab Runner (RBAC Fix)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: devops-tools
  name: gitlab-runner-role
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec"]
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]


---
# ClusterRoleBinding for GitLab Runner
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: devops-tools
  name: gitlab-runner-rolebinding
subjects:
  - kind: ServiceAccount
    name: gitlab-runner
    namespace: devops-tools
roleRef:
  kind: Role
  name: gitlab-runner-role
  apiGroup: rbac.authorization.k8s.io

---
# ConfigMap for GitLab Runner Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-runner-config
  namespace: devops-tools
data:
  config.toml: |
    concurrent = 4
    check_interval = 30

---
# PersistentVolumeClaim for GitLab Runner (Optional but recommended)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-runner-pvc
  namespace: devops-tools
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# Deployment for GitLab Runner
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: devops-tools
  labels:
    app: gitlab-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-runner
  template:
    metadata:
      labels:
        app: gitlab-runner
    spec:
      serviceAccountName: gitlab-runner
      containers:
        - name: gitlab-runner
          image: gitlab/gitlab-runner:latest
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/gitlab-runner
            - name: runner-data
              mountPath: /home/gitlab-runner
          env:
            - name: CI_SERVER_URL
              value: "http://gitlab-service.devops-tools.svc.cluster.local:80"
            - name: REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gitlab-runner-secret
                  key: runner-registration-token
            - name: KUBERNETES_NAMESPACE
              value: "devops-tools"
          command: ["/bin/bash", "-c"]
          args:
            - |
              if [[ ! -f /etc/gitlab-runner/registered ]]; then
                gitlab-runner register \
                  --non-interactive \
                  --url "$CI_SERVER_URL" \
                  --registration-token "$REGISTRATION_TOKEN" \
                  --executor "kubernetes" \
                  --shell "bash" \
                  --kubernetes-namespace "$KUBERNETES_NAMESPACE" \
                  --name "kubernetes-runner" \
                  --output-limit 20480 && \
                touch /etc/gitlab-runner/registered
              fi
              gitlab-runner run
      volumes:
        - name: config-volume
          emptyDir: {}
        - name: runner-data
          persistentVolumeClaim:
            claimName: gitlab-runner-pvc
