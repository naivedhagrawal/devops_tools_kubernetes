apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hostpath-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: glpi-pv
  namespace: devops-tools
spec:
  storageClassName: hostpath-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/data/glpi"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: glpi-pvc
  namespace: devops-tools
spec:
  storageClassName: hostpath-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeName: glpi-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  namespace: devops-tools
spec:
  storageClassName: hostpath-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/data/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: devops-tools
spec:
  storageClassName: hostpath-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeName: mysql-pv
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: devops-tools
type: Opaque
data:
  mysql_root_password: bXlzcWw=       # base64 encoded "mysql"
  mysql_user: Z2xwaQ==                # base64 encoded "glpi"
  mysql_password: bXlzcWw=            # base64 encoded "mysql"
  mysql_database: Z2xwaWRi             # base64 encoded "glpidb"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          envFrom:
            - secretRef:
                name: mysql-secret
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-storage
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: devops-tools
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glpi
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: glpi
  template:
    metadata:
      labels:
        app: glpi
    spec:
      initContainers:
        - name: init-apache
          image: busybox
          command: ["sh", "-c", "echo 'ServerName 127.0.0.1' > /mnt/apache2/apache2.conf && \
                   echo 'LoadModule mpm_prefork_module /usr/lib/apache2/modules/mod_mpm_prefork.so' >> /mnt/apache2/apache2.conf && \
                   echo 'LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so' >> /mnt/apache2/apache2.conf && \
                   mkdir -p /etc/apache2/sites-available && \
                   touch /etc/apache2/sites-available/000-default.conf && \
                   a2enmod rewrite && \
                   mkdir -p /etc/apache2/logs"]
          volumeMounts:
            - name: apache-config
              mountPath: /mnt/apache2
      containers:
        - name: glpi
          image: diouxx/glpi
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: mysql-secret
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - mountPath: /var/www/html/glpi/files
              name: glpi-storage
            - mountPath: /etc/apache2
              name: apache-config
      volumes:
        - name: glpi-storage
          persistentVolumeClaim:
            claimName: glpi-pvc
        - name: apache-config
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: glpi
  namespace: devops-tools
spec:
  selector:
    app: glpi
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30000
  type: NodePort
