---
apiVersion: v1
kind: Namespace
metadata:
  name: defectdojo
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-postgres
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/defectdojo/postgres
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-redis
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/defectdojo/redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: defectdojo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeName: pv-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: defectdojo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: pv-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: defectdojo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            - name: POSTGRES_DB
              value: defectdojo
            - name: POSTGRES_USER
              value: defectdojo
            - name: POSTGRES_PASSWORD
              value: defectdojo
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: defectdojo
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: defectdojo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-storage
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: defectdojo
spec:
  ports:
    - port: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: defectdojo
  namespace: defectdojo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: defectdojo
  template:
    metadata:
      labels:
        app: defectdojo
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done']
        - name: wait-for-redis
          image: busybox
          command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done']
      containers:
        - name: defectdojo
          image: defectdojo/defectdojo-django:latest
          env:
            - name: DD_DATABASE_URL
              value: postgres://defectdojo:defectdojo@postgres:5432/defectdojo
            - name: DD_SECRET_KEY
              value: changemeplease
            - name: CELERY_BROKER_URL
              value: redis://redis:6379/0
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: defectdojo
  namespace: defectdojo
spec:
  type: NodePort
  selector:
    app: defectdojo
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30088
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: defectdojo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done']
        - name: wait-for-redis
          image: busybox
          command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done']
      containers:
        - name: celery-worker
          image: defectdojo/defectdojo-django:latest
          command: ["celery"]
          args: ["-A", "dojo", "worker", "-l", "info"]
          env:
            - name: DD_DATABASE_URL
              value: postgres://defectdojo:defectdojo@postgres:5432/defectdojo
            - name: DD_SECRET_KEY
              value: changemeplease
            - name: CELERY_BROKER_URL
              value: redis://redis:6379/0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: defectdojo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done']
        - name: wait-for-redis
          image: busybox
          command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done']
      containers:
        - name: celery-beat
          image: defectdojo/defectdojo-django:latest
          command: ["celery"]
          args: ["-A", "dojo", "beat", "-l", "info"]
          env:
            - name: DD_DATABASE_URL
              value: postgres://defectdojo:defectdojo@postgres:5432/defectdojo
            - name: DD_SECRET_KEY
              value: changemeplease
            - name: CELERY_BROKER_URL
              value: redis://redis:6379/0