apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wiki
  template:
    metadata:
      labels:
        app: wiki
    spec:
      containers:
        - name: wiki
          image: requarks/wiki:latest
          ports:
            - containerPort: 3000
          env:
            - name: DB_TYPE
              value: "postgres"
            - name: DB_HOST
              value: "postgres-wikijs.devops-tools.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_DB
          volumeMounts:
            - name: wiki-storage
              mountPath: /wiki/data
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 2
              memory: 4Gi
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 5
      volumes:
        - name: wiki-storage
          persistentVolumeClaim:
            claimName: wiki-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: wiki-service
  namespace: devops-tools
spec:
  type: NodePort # Or NodePort if LoadBalancer is not available
  selector:
    app: wiki
  ports:
    - protocol: TCP
      port: 6000 # External port
      targetPort: 3000
      nodePort: 32005 # Only needed if type is NodePort
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-wiki-storage # REPLACE with cloud-provided StorageClass for production
provisioner: kubernetes.io/no-provisioner # REPLACE for production
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wiki-pv
  labels:
    app: wiki
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce # Consider ReadWriteMany if your storage supports it
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-wiki-storage # Match StorageClass name
  hostPath: # REPLACE with appropriate configuration for your storage
    path: /home/data/wiki  # REPLACE for production
  nodeAffinity: # REMOVE for production unless you have a specific reason
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - kind-worker # REMOVE for production
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wiki-pvc
  namespace: devops-tools
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-wiki-storage # Match StorageClass name
  resources:
    requests:
      storage: 5Gi