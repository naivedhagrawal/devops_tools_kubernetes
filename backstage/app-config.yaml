app:
  title: AXIS MAXLIFE INSURANCE
  baseUrl: http://localhost:3000

organization:
  name: AXIS MAXLIFE INSURANCE

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    host: 0.0.0.0  # Allow external access
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: pg
    connection:
      host: postgres.devops-tools.svc.cluster.local  # Match Kubernetes service name
      port: 5432
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      database: ${POSTGRES_DB}

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}  # Reference GitHub token from Kubernetes secrets

proxy: {}

techdocs:
  builder: 'local'
  generator:
    runIn: 'local'  # Faster local build
  publisher:
    type: 'local'

auth:
  providers:
    github:
      development:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}
        callbackUrl: http://localhost:7007/api/auth/github/handler/frame

scaffolder: {}

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: ../../examples/entities.yaml
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]
  useUrlReadersSearch: true

permission:
  enabled: true
