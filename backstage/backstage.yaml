# Persistent Volume for PostgreSQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  storageClassName: hostpath-storage
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/data/postgres"

---
# Persistent Volume Claim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: hostpath-storage
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: backstage
            - name: POSTGRES_USER
              value: backstage
            - name: POSTGRES_PASSWORD
              value: backstage
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: devops-tools
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-config
  namespace: devops-tools
data:
  app-config.yaml: |
    app:
      title: Backstage
    backend:
      database:
        client: pg
        connection: "postgres://backstage:backstage@postgres:5432/backstage"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      containers:
        - name: backstage
          image: ghcr.io/backstage/backstage:latest
          env:
            - name: APP_CONFIG
              value: "/app/config/app-config.yaml"
          ports:
            - containerPort: 7007
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: backstage-config
---
apiVersion: v1
kind: Service
metadata:
  name: backstage
  namespace: devops-tools
spec:
  selector:
    app: backstage
  ports:
    - protocol: TCP
      port: 30091
      targetPort: 7007
  type: NodePort
